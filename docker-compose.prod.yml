# Mobius Context Engine - Production Environment
# Override configurations for production deployment
#
# IMPORTANT: This file requires specific environment variables.
# See docs/deployment/production-environment-variables.md for required variables and setup instructions.

services:
  # FastAPI Backend - Production configuration
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: production # Use production stage without dev dependencies
    command: ['python', '-m', 'app.main'] # Let the app use its own host/port configuration
    environment:
      # Mobius-specific configuration for production
      MOBIUS_HOST: '0.0.0.0' # Required in container for external access
      MOBIUS_PORT: '8000'
      MOBIUS_ENVIRONMENT: 'production'
      MOBIUS_DATABASE__URL: postgresql://${POSTGRES_USER:?Missing POSTGRES_USER}:${POSTGRES_PASSWORD:?Missing POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-mobius}
      MOBIUS_REDIS__URL: redis://:${REDIS_PASSWORD:?Missing REDIS_PASSWORD}@redis:6379
      MOBIUS_SECURITY__SECRET_KEY: ${MOBIUS_SECRET_KEY:?Missing MOBIUS_SECRET_KEY}
      MOBIUS_SECURITY__ALLOWED_ORIGINS: ${MOBIUS_ALLOWED_ORIGINS:?Missing MOBIUS_ALLOWED_ORIGINS}
      # Legacy environment variables
      ENVIRONMENT: production
      LOG_LEVEL: INFO
    volumes: [] # No volume mounts in production
    restart: always

  # React Frontend - Production build
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile # Use production Dockerfile
    command: ['nginx', '-g', 'daemon off;']
    environment:
      NODE_ENV: production
    volumes: [] # No volume mounts in production
    restart: always

  # PostgreSQL - Production settings
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mobius}
      POSTGRES_USER: ${POSTGRES_USER:?Missing POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Missing POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Remove init.sql mount in production - should be handled by migrations

  # Redis - Production settings
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru --requirepass ${REDIS_PASSWORD:?Missing REDIS_PASSWORD}
    volumes:
      - redis_data:/data

  # Qdrant - Production settings
  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: WARN
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY:?Missing QDRANT_API_KEY}
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
