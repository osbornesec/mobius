# Mobius Context Engine - Development Environment

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: mobius-postgres
    environment:
      POSTGRES_DB: mobius
      POSTGRES_USER: mobius
      POSTGRES_PASSWORD: mobius
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mobius -d mobius"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mobius-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: mobius-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - mobius-network

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: mobius-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/6333' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mobius-network

  # FastAPI Backend
  backend:
    # Using a placeholder image until backend directory is created
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    image: python:3.11-slim
    container_name: mobius-backend
    command: ["sh", "-c", "echo 'Backend placeholder - waiting for implementation' && sleep infinity"]
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://mobius:mobius@postgres:5432/mobius
      REDIS_URL: redis://redis:6379
      QDRANT_URL: http://qdrant:6333
      ENVIRONMENT: development
      # Additional environment variables for better dev experience
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: DEBUG
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/8000' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mobius-network

  # React Frontend (development)
  frontend:
    # Using a placeholder image until frontend directory is created
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile.dev
    image: node:18-alpine
    container_name: mobius-frontend
    command: ["sh", "-c", "echo 'Frontend placeholder - waiting for implementation' && sleep infinity"]
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
      # Additional environment variables for React development
      CHOKIDAR_USEPOLLING: "true"  # For hot reload in Docker
      WATCHPACK_POLLING: "true"
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true  # Keep stdin open for interactive mode
    tty: true  # Allocate a pseudo-TTY
    networks:
      - mobius-network

networks:
  mobius-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local