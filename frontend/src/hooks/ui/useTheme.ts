import { useEffect } from 'react';
import useUIStore from '@/store/uiStore';

/**
 * @description
 * React hook that manages the application's theme based on user preference and system color scheme. It synchronizes the theme state with the system's dark mode setting when the theme is set to 'system', dynamically applying or removing the 'dark' CSS class on the document root element as needed.
 *
 * @returns An object containing the current theme and a function to update the theme.
 *
 * @example
 * const { theme, setTheme } = useTheme();
 * setTheme('dark'); // Switches to dark mode
 * setTheme('system'); // Follows system color scheme
 *
 * @since 1.0.0
 * Generated by CodeRabbit
 */
export function useTheme() {
  const { theme, setTheme } = useUIStore();

  useEffect(() => {
    const root = document.documentElement;
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');

    const applyTheme = () => {
      const shouldBeDark = theme === 'dark' || (theme === 'system' && mediaQuery.matches);
      if (shouldBeDark) {
        root.classList.add('dark');
      } else {
        root.classList.remove('dark');
      }
    };

    // Apply theme immediately
    applyTheme();

    // Only add the event listener when theme is 'system'
    if (theme === 'system') {
      mediaQuery.addEventListener('change', applyTheme);
    }

    return () => {
      // Only remove the event listener when theme is 'system'
      if (theme === 'system') {
        mediaQuery.removeEventListener('change', applyTheme);
      }
    };
  }, [theme]);

  return { theme, setTheme };
}
